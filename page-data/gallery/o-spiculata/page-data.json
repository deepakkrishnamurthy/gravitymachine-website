{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/gallery/o-spiculata","result":{"data":{"doc":{"__typename":"MdxDoc","id":"583a37f0-8949-544c-ad53-b4422b678e99","title":"Ophiothrix spiculata","slug":"gallery/o-spiculata","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ophiothrix spiculata\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"iframe\", {\n    src: \"https://player.vimeo.com/video/447299580\",\n    width: \"640\",\n    height: \"360\",\n    frameBorder: \"0\",\n    allow: \"autoplay; fullscreen\",\n    allowFullScreen: true\n  }), mdx(\"p\", null, \"Multi-scale tracking of a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"O. spiculata\"), \" (Spiny brittle star) larva showing active sinking behavior of the larvae in wide spirals. The larvae also can swim upwards actively in the water column. The interaction of ciliary activity, shape and gravity make for a rich behavioral space that can be explored using tools like Gravity Machine. \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Ophiothrix spiculata"}},"prev":{"__typename":"MdxDoc","id":"c9b85fd8-05f4-5034-9578-49fbed389a14","title":"Patiria miniata","slug":"gallery/p-miniata","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Patiria miniata\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"iframe\", {\n    src: \"https://player.vimeo.com/video/447256489\",\n    width: \"640\",\n    height: \"360\",\n    frameBorder: \"0\",\n    allow: \"autoplay; fullscreen\",\n    allowFullScreen: true\n  }), mdx(\"p\", null, \"Multi-scale tracking using Gravity Machine reveals repeated behavioral transitions in \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"P. miniata\"), \" (Bat-star) larva. The larvae swim upwards in a highly directed fashion but interrupt this with transitions to periods of sinking and hovering. In particular one can use Gravity Machine to concurrently measure the flow-field surrounding the larvae revealing a striking array of vortices (data time-stamp: 300 s) that the larvae develops around itself using its ciliary band. The dynamics of the formation and destruction of these vortices are captured in fine detail and contain information on the state of the ciliary band. This short data-segment shows 3 such behavioral transitions.   \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Patiria miniata"}},"next":{"__typename":"MdxDoc","id":"50e10cca-9190-54c0-977f-56cc93ac709f","title":"Dendraster excentricus","slug":"gallery/d-excentricus","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dendraster excentricus\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"iframe\", {\n    src: \"https://player.vimeo.com/video/448184856\",\n    width: \"640\",\n    height: \"360\",\n    frameBorder: \"0\",\n    allow: \"autoplay; fullscreen\",\n    allowFullScreen: true\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"D. excentricus\"), \" (Pacific sand dollar) larva show very frequent behavioral transitions from periods of upward swimming to briefly sink down the water-column. Multi-scale tracking using Gravity Machine has revealed a novel aspect of this behavior wherein each transition causes the larva to choose a new direction of upward swimming. The result of many such transitions is that the larva scans a significantly wider area of the water column. This is visible in the resulting 3D trajectory, shown to the right of the video having substantial horizontal drift. Such observations highlight the utility of multi-scale tracking tools where the micro-macro coupling is possible within the same dataset.  \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Dendraster excentricus"}}},"pageContext":{"id":"583a37f0-8949-544c-ad53-b4422b678e99","prev":"c9b85fd8-05f4-5034-9578-49fbed389a14","next":"50e10cca-9190-54c0-977f-56cc93ac709f"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","2877882650","2877882650","3223469662","3223469662","3293221050","925935800","925935800"]}