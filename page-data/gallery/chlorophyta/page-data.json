{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/gallery/chlorophyta","result":{"data":{"doc":{"__typename":"MdxDoc","id":"dc9dedc4-f22a-5c87-b3b9-395b34197a2b","title":"Chlorophyta","slug":"gallery/chlorophyta","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Chlorophyta\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Grid = makeShortcode(\"Grid\");\nvar Block = makeShortcode(\"Block\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Grid, {\n    col: \"1|2|3\",\n    gap: \"4|6|8\",\n    mt: \"4|6|8\",\n    mdxType: \"Grid\"\n  }, mdx(Block, {\n    src: \"gallery/card\",\n    href: \"/gallery/v-aureus\",\n    image: \"gallery/v-aureus.png\",\n    name: \"Volvox aureus\",\n    mdxType: \"Block\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":null,"data":{"title":"Chlorophyta"}},"prev":{"__typename":"MdxDoc","id":"19ee4d89-7102-5fc6-a9e3-ad1a3dfeb013","title":"Euglena gracilis","slug":"gallery/e-gracilis","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Euglena gracilis\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"iframe\", {\n    src: \"https://player.vimeo.com/video/448185770\",\n    width: \"640\",\n    height: \"360\",\n    frameBorder: \"0\",\n    allow: \"autoplay; fullscreen\",\n    allowFullScreen: true\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"E. gracilis:\"), \", a single-celled algae which measures only around 10-20 microns in size is among the smallest cells we have tracked so far using Gravity Machine. These cells are know for their remarkable gravitactic behaviors and indeed are model organisms for gravitational biology. Their gravitactic ability is clearly apparent in the dataset shown here with the cells swimming in a highly directed fashion downwards. \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Euglena gracilis"}},"next":{"__typename":"MdxDoc","id":"c92cdf18-8cbc-5644-a7ba-47bc5958a8b4","title":"Volvox aureus","slug":"gallery/v-aureus","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Volvox aureus\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"iframe\", {\n    src: \"https://player.vimeo.com/video/448190303\",\n    width: \"640\",\n    height: \"360\",\n    frameBorder: \"0\",\n    allow: \"autoplay; fullscreen\",\n    allowFullScreen: true\n  }), mdx(\"p\", null, \"We use \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"V. aureus:\"), \" to demonstrate a unique experimental capability using Gravity Machine. This is the ability t pattern \\\"Virtual-reality environments\\\" for single cells and small swimming organisms. Here we show this for a vertically-patterned light-intensity gradient. As the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"V. auerus\"), \" colony swims upwards, the experiment triggers an alternating transition in the ambient light intensity for every 2 cm change in the organism's depth (a purely arbitrary choice chosen for demonstration purposes). This gives us a unique window into the photo-response over much longer scales than has been possible earlier. Notice the small jerks in the track that appear as the colony triggers repeated transitions in the light levels (the first of these occurs at a time-stamp: 72 s). \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Volvox aureus"}}},"pageContext":{"id":"dc9dedc4-f22a-5c87-b3b9-395b34197a2b","prev":"19ee4d89-7102-5fc6-a9e3-ad1a3dfeb013","next":"c92cdf18-8cbc-5644-a7ba-47bc5958a8b4"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","2877882650","2877882650","3223469662","3223469662","3293221050","925935800","925935800"]}